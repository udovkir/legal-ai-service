services:
  # PostgreSQL с pgvector
  postgres:
    image: pgvector/pgvector:pg16
    container_name: legal_ai_postgres
    environment:
      POSTGRES_DB: legal_ai_db
      POSTGRES_USER: legal_user
      POSTGRES_PASSWORD: legal_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - legal_ai_network

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: legal_ai_redis
    networks:
      - legal_ai_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: legal_ai_backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://legal_user:legal_password@postgres:5432/legal_ai_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - legal_ai_network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: legal_ai_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:3001
      - REACT_APP_WS_URL=ws://localhost:3001
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - legal_ai_network

  # n8n для автоматизации
  n8n:
    image: n8nio/n8n:latest
    container_name: legal_ai_n8n
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=Europe/Moscow
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=legal_ai_db
      - DB_POSTGRESDB_USER=legal_user
      - DB_POSTGRESDB_PASSWORD=legal_password
    ports:
      - "5678:5678"
    depends_on:
      - postgres
    networks:
      - legal_ai_network
    volumes:
      - n8n_data:/home/node/.n8n

  # Nginx для проксирования
  nginx:
    image: nginx:alpine
    container_name: legal_ai_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/letsencrypt:/var/www/certbot
    depends_on:
      - frontend
      - backend
      - n8n
    networks:
      - legal_ai_network

  # Certbot utility (выпуск/renew сертификатов вручную через docker compose run)
  certbot:
    image: certbot/certbot:latest
    container_name: legal_ai_certbot
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/letsencrypt:/var/www/certbot
    networks:
      - legal_ai_network

volumes:
  postgres_data:
  n8n_data:

networks:
  legal_ai_network:
    driver: bridge

